import { join } from '@std/path'

const APP_NAME = 'hypermix'

const HYPERMIX_CONFIG_NAMES = [
  `${APP_NAME}.config.js`,
  `${APP_NAME}.config.ts`,
  `${APP_NAME}.config.json`,
  `${APP_NAME}.config.jsonc`,
] as const

const REPOMIX_BOOLEAN_FLAGS = [
  '--version',
  '--stdout',
  '--parsable-style',
  '--compress',
  '--output-show-line-numbers',
  '--copy',
  '--no-file-summary',
  '--no-directory-structure',
  '--remove-comments',
  '--remove-empty-lines',
  '--include-empty-directories',
  '--include-diffs',
  '--no-git-sort-by-changes',
  '--no-gitignore',
  '--no-default-patterns',
  '--global',
  '--no-security-check',
  '--mcp',
  '--verbose',
  '--quiet',
] as const

const DEFAULT_PATH = join(Deno.cwd(), `.${APP_NAME}`)

const REPOMIX_DEFAULT_FLAGS = [
  '--remove-empty-lines',
  '--compress',
  '--quiet',
  '--parsable-style',
] as const

const MAKEFILE_TASKS = {
  [APP_NAME]: APP_NAME,
} as const

const MAKEFILE_SECTION_MARKER = `# ${APP_NAME} build`

const VSCODE_TASK_DEFAULTS = {
  VERSION: '2.0.0',
  TYPE: 'shell',
  ARGS: [],
  PROBLEM_MATCHER: [],
} as const

const NX_EXECUTOR = 'nx:run-commands'

const FORMATTING_OPTIONS = {
  insertSpaces: true,
  tabSize: 2,
} as const

const CURSOR_RULE_TEMPLATE = `---
name: Hypermix Generated Files
description: This rule helps you understand the codebase generated by hypermix.
globs: {repomix_files_list}
---

# Understanding Your Hypermix Generated Files

This rule helps you understand the files generated by hypermix in your codebase.

## Generated Files

The following files are generated by hypermix:

{repomix_files_list}

This file represents the current codebase.

## Purpose

These files are generated by hypermix to help you understand and navigate your codebase. They contain:

- A structured representation of your code
- Important relationships and dependencies
- Key functionality and patterns

## Usage

You can use these files to:

1. Understand the overall structure of your codebase
2. Find related code and dependencies
3. Navigate between connected components
4. Identify patterns and conventions

## Tips

When working with files related to hypermix:

1. These files are regenerated when you run hypermix
2. They reflect the current state of your codebase
3. Use them as a reference for understanding code organization
4. They can help identify patterns and relationships`

export {
  APP_NAME,
  CURSOR_RULE_TEMPLATE,
  DEFAULT_PATH,
  FORMATTING_OPTIONS,
  HYPERMIX_CONFIG_NAMES,
  MAKEFILE_SECTION_MARKER,
  MAKEFILE_TASKS,
  NX_EXECUTOR,
  REPOMIX_BOOLEAN_FLAGS,
  REPOMIX_DEFAULT_FLAGS,
  VSCODE_TASK_DEFAULTS,
}
