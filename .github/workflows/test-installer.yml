name: Test Installer

on:
  workflow_run:
    workflows: ["Release to GitHub"] # Name of the workflow to wait for
    types: [completed]
    branches: [main]
jobs:
  test-npm-installer:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16, 18, 20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Test npm package locally
        shell: bash
        run: |
          echo "Testing npm package installation on ${{ matrix.os }} with Node ${{ matrix.node }}"
          
          # Test the npm package can be installed
          echo "Creating npm package..."
          npm pack
          
          # Find the created package file
          PACKAGE_FILE=$(ls hypermix-*.tgz)
          echo "✓ Created package: $PACKAGE_FILE"
          
          # Debug package contents
          echo "Package contents:"
          if [ "${{ runner.os }}" = "Windows" ]; then
            tar -xf "$PACKAGE_FILE" -O package/package.json
            tar -tvf "$PACKAGE_FILE" | grep -v "node_modules"
          else
            tar -tvf "$PACKAGE_FILE" | grep -v "node_modules"
          fi
          
          echo "Installing package globally..."
          npm install -g "$PACKAGE_FILE"
          echo "✓ Package installed globally"
          
          # Debug npm installation
          echo "Debugging npm installation..."
          echo "Global npm modules directory:"
          npm root -g
          echo "Global npm bin directory:"
          npm bin -g
          echo "Checking if hypermix is in global modules:"
          ls -la "$(npm root -g)" | grep hypermix || echo "hypermix not found in global modules"
          
          # Check if the scripts directory exists in the installed package
          GLOBAL_HYPERMIX_DIR="$(npm root -g)/hypermix"
          if [ -d "$GLOBAL_HYPERMIX_DIR" ]; then
            echo "Contents of installed hypermix package:"
            ls -la "$GLOBAL_HYPERMIX_DIR"
            if [ -d "$GLOBAL_HYPERMIX_DIR/scripts" ]; then
              echo "Scripts directory exists, listing contents:"
              ls -la "$GLOBAL_HYPERMIX_DIR/scripts"
            else
              echo "Scripts directory not found in installed package"
            fi
            if [ -d "$GLOBAL_HYPERMIX_DIR/bin" ]; then
              echo "Bin directory exists, listing contents:"
              ls -la "$GLOBAL_HYPERMIX_DIR/bin"
            else
              echo "Bin directory not found in installed package"
            fi
          else
            echo "Hypermix package directory not found at $GLOBAL_HYPERMIX_DIR"
          fi
          
          # Check if postinstall ran successfully, if not run it manually
          if [ -d "$GLOBAL_HYPERMIX_DIR" ] && [ ! -d "$GLOBAL_HYPERMIX_DIR/bin" ]; then
            echo "Bin directory not found, running postinstall manually..."
            cd "$GLOBAL_HYPERMIX_DIR"
            node scripts/postinstall.js
            echo "Manual postinstall completed"
          fi
          
          # Run our test script first for better diagnostics
          echo "Running npm package test script..."
          node scripts/test-npm-package.js
          
          # Test that hypermix command is available
          echo "Testing hypermix command availability..."
          if hypermix --version; then
            echo "✓ hypermix --version succeeded"
          elif hypermix --help; then
            echo "✓ hypermix --help succeeded (version command may not be implemented)"
          else
            echo "ERROR: hypermix command not found or failed to execute"
            echo "PATH: $PATH"
            echo "npm bin location: $(npm bin -g)"
            exit 1
          fi
          
          # Test npx usage
          echo "Testing npx usage..."
          if npx hypermix --help; then
            echo "✓ npx hypermix --help succeeded"
          else
            echo "ERROR: npx hypermix failed"
            exit 1
          fi
          
          echo "✓ All tests passed on ${{ matrix.os }} with Node ${{ matrix.node }}"

      - name: Cleanup
        if: always()
        shell: bash
        run: |
          echo "Cleaning up test artifacts..."
          npm uninstall -g hypermix || true
          
          # Use OS-specific command for file removal
          if [ "${{ runner.os }}" = "Windows" ]; then
            rm -f hypermix-*.tgz || true
          else
            rm -f hypermix-*.tgz || true
          fi
          echo "✓ Cleanup completed" 
