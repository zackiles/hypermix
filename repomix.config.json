{
  "$schema": "https://repomix.com/schemas/latest/schema.json",
  // Configures input file handling for Repomix.
  "input": {
    // Specifies the maximum size in bytes for an individual file to be processed. Files exceeding this size will be excluded.
    // Default: 52428800 (50MB)
    "maxFileSize": 1048576
  },
  "app": {
    "name": "hypermix"
  },
  // Configures the output generated by Repomix.
  "output": {
    // Custom text to prepend to the output file, often used for context or instructions for AI models.
    "headerText": "CRITICAL: This contains a snapshot of the entire codebase. It was manually generated and may be slightly out of date and/or inaccurate. It can be generated again with the command `hypermix`",
    // If true, includes a summary section in the output, which may contain file overviews and directory structures.
    "summary": true,
    // If true, enables code compression using Tree-sitter to reduce token count while aiming to preserve structural code elements. Corresponds to the CLI option: --compress.
    "compress": false,
    // If true, formats the output in a style that is more easily parsable by machines or specific AI tools, potentially using structured tags more extensively.
    "parsableStyle": true,
    // If true, includes a summary of files (e.g., names, paths, token counts) in the output.
    "fileSummary": true,
    // If true, includes a representation of the repository's directory structure in the output.
    "directoryStructure": true,
    // If true, includes the actual content of the processed files in the output.
    "files": true,
    // If true, attempts to remove comments from the code included in the output.
    "removeComments": false,
    // If true, attempts to remove empty lines from the code included in the output.
    "removeEmptyLines": true,
    // Specifies the number of files to list in summaries that rank files (e.g., by size or git changes, if applicable).
    "topFilesLength": 15,
    // If true, includes line numbers alongside the code in the output.
    "showLineNumbers": true,
    // If true, attempts to copy the generated output content to the system clipboard upon completion.
    "copyToClipboard": false,
    // Configuration settings specific to Git integration.
    "git": {
      // If true, files in the output can be sorted based on their recent Git change activity.
      "sortByChanges": true,
      // When sortByChanges is enabled, this limits the number of commits scanned to determine change frequency.
      "sortByChangesMaxCommits": 100,
      // If true, includes Git diff information in the output, where applicable.
      "includeDiffs": false
    }
  },
  // An array of glob patterns specifying which files and directories to explicitly include. Corresponds to the --include CLI parameter.
  "include": ["src/**/*.ts", "README.md", "examples/**/**"],
  // Configures patterns for ignoring files and directories.
  "ignore": {
    // If true, Repomix will respect rules defined in the project's .gitignore file.
    "useGitignore": false,
    // If true, Repomix applies a set of default ignore patterns (e.g., for .git, node_modules).
    "useDefaultPatterns": true,
    // An array of custom glob patterns for files and directories that should be excluded from processing.
    "customPatterns": []
  },
  // Configures security-related features.
  "security": {
    // If true, enables security checks, such as using Secretlint to detect potential secrets or sensitive information in the codebase.
    "enableSecurityCheck": true
  },
  // Configures token counting for understanding LLM context window usage.
  "tokenCount": {
    // Specifies the encoding model used for token counting (e.g., 'o200k_base' for newer OpenAI models).
    "encoding": "o200k_base"
  }
}
